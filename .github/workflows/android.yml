name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
#   # run every 3 hour
#   schedule:
#     #   分 时 日 月 周
#     - cron: '0 */5 * * *'

jobs:
  test-Install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: maven
      - name: Installation depends
        run: |
          sudo apt-get update
          sudo apt-get  install unzip
      - name: Check env
        run: |
          type unzip>./tree.txt
      - name: Upload tree
        uses: actions/upload-artifact@v1
        with:
          name: tree.txt
          path: ./tree.txt

  checkenv:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Git all permission
      run: |
          chmod -R 777 *
          git config core.filemode false

    - name: export Env
      continue-on-error: true
      run: |
        echo "环境监测结果">./checkenv.txt
        echo "ANDROID_HOME: ${ANDROID_HOME}">>./checkenv.txt
        echo "ANDROID_SDK_ROOT: ${ANDROID_SDK_ROOT}">>./checkenv.txt
        echo "build-tools环境监测">>./checkenv.txt
        #ls ${ANDROID_HOME}/build-tools>>./checkenv.txt
        ### export PATH
        export PATH=$PATH:${ANDROID_HOME}/emulator:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/build-tools/30.0.3:${ANDROID_HOME}/build-tools/30.0.3/lld-bin:${ANDROID_HOME}/ndk/23.0.7599858
        ### shell
        echo "adb环境变量测试数据">>./checkenv.txt
        adb --help>>./checkenv.txt
        echo "dx环境变量测试数据">>./checkenv.txt
        type dx>>./checkenv.txt
        echo "NDK环境监测">>./checkenv.txt
        ls ${ANDROID_HOME}/ndk>>./checkenv.txt

    # # install ndk example
    # - name: Install NDK
    #   run: |
    #         ${ANDROID_HOME}/tools/bin/sdkmanager --list --channel=1
    #         echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;16.1.4479499" --sdk_root=${ANDROID_SDK_ROOT} --channel=1

#     - name: cat install Result
#       continue-on-error: true
#       run: |
#         echo "NDK修改后环境监测">>./checkenv.txt
#         ls ${ANDROID_HOME}/ndk>>./checkenv.txt
        
    - name: Upload tree
      uses: actions/upload-artifact@v1
      with:
       name: checkenv.txt
       path: ./checkenv.txt

  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Give permission
      run: |
          chmod -R 777 *
          git config core.filemode false

    # - name: gradlew Build
    #   run: |
    #       ./gradlew build
#     # 能生成可下载的apk文档 
#     - name: Upload Apk
#       uses: actions/upload-artifact@v1
#       with: 
#         name: app-debug.apk
#         path: |
#             app/build/outputs/apk/debug/app-debug.apk
#             app/build.gradle
#     - uses: actions/upload-artifact@v2
#       with:
#         name: multisource
#         path: |
#           app/build/outputs/apk/debug/app-debug.apk
#           app/build.gradle
    # - name: Gradle prebuild
    #   run: ./gradlew prebuild
    - name: Build release
      id: buildRelease
      run: |
        ./gradlew :app:assembleRelease
        echo "::set-output name=releaseName::`ls app/build/outputs/apk/release/*.apk | awk -F '(/|.apk)' '{print $6}'`"
    - name: Build app debug
      id: buildDebug
      run: |
        ./gradlew :app:assembleDebug
        echo "::set-output name=debugName::`ls app/build/outputs/apk/debug/*.apk | awk -F '(/|.apk)' '{print $6}'`"
    - name: Upload release
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.buildRelease.outputs.releaseName }}
        path: "app/build/outputs/apk/release/*.apk"
    - name: Upload debug
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.buildDebug.outputs.debugName }}
        path: "app/build/outputs/apk/debug/*.apk"

    # # step： 获取apk版本号
    # - name: APK Version
    #   id: apk_version
    #   run: |
    #         versionCode=`grep "versionCode" app/build.gradle | awk -F " " '{print $2}'`
    #         versionName=`grep "versionName" app/build.gradle | awk -F ''\"'' '{print $2}'`
    #         echo "versionResult=$versionName.$versionCode"  >> $GITHUB_ENV
   
    # # 获取git log
    # - name: Get git log
    #   id: git_log
    #   run: |
    #         updateLog=`git log --pretty=format:"%s" -1`
    #         echo "updateLog=$updateLog" >> $GITHUB_ENV
  alint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: |
        ./gradlew lint
        # ls -R *>./lint-tree.txt
        echo "RESULT">./lint-tree.txt
        echo "ANDROID_HOME: ${ANDROID_HOME}">>./lint-tree.txt
        echo "ANDROID_SDK_ROOT: ${ANDROID_SDK_ROOT}">>./lint-tree.txt
        ls -R ${ANDROID_HOME}>> ./lint-tree.txt
#     - name: Upload tree
#       uses: actions/upload-artifact@v1
#       with:
#        name: tree.txt
#        path: ./tree.txt
    - uses: actions/upload-artifact@v2
      with:
        name: lint-result
        path: |
          ./lint-tree.txt
          ./app/build/reports/*.html
          ./app/build/reports/*.xml
